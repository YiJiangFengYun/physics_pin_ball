{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/bounds.ts","webpack:///./src/circle.ts","webpack:///./src/index.ts","webpack:///./src/my_circle.ts","webpack:///./src/object.ts","webpack:///./src/rectangle.ts","webpack:///./src/vector.ts","webpack:///./src/world.ts"],"names":[],"mappings":"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","file":"model.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","export class Bounds {\r\n    public static intersectBounds(bounds1:Bounds, bounds2:Bounds):boolean {\r\n        if (bounds1.minX > bounds2.maxX || bounds1.maxX < bounds2.minX || \r\n            bounds1.minY > bounds2.maxY || bounds1.maxY < bounds2.minY) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    minX:number;\r\n    minY:number;\r\n    maxX:number;\r\n    maxY:number;\r\n    constructor(minX:number = 0, minY:number = 0, maxX:number = 0, maxY:number = 0) {\r\n        this.minX = minX;\r\n        this.minY = minY;\r\n        this.maxX = maxX;\r\n        this.maxY = maxY;\r\n    }\r\n\r\n    intersect(target:Bounds):boolean {\r\n        return Bounds.intersectBounds(this, target);\r\n    }\r\n}","import { Obj } from \"./object\";\r\nimport { Bounds } from \"./bounds\";\r\nimport { Vector } from \"./vector\";\r\n\r\nexport class Circle extends Obj {\r\n    private _radius:number;\r\n    constructor() {\r\n        super();\r\n        this._radius = 0;\r\n        this._setBounds();\r\n    }\r\n\r\n    get radius():number {\r\n        return this._radius;\r\n    }\r\n\r\n    set radius(value:number) {\r\n        this._radius = value;\r\n    }\r\n\r\n    get pos() {\r\n        return this._pos;\r\n    }\r\n\r\n    set pos(value:Vector) {\r\n        var pos = this._pos;\r\n        pos.copy(value);\r\n        this._setBounds();\r\n    }\r\n\r\n    updatePos(value?:Vector) {\r\n        super.updatePos(value);\r\n        this._setBounds();\r\n    }\r\n\r\n    _setBounds() {\r\n        let pos = this._pos;\r\n        var bounds = this._bounds;\r\n        var radius = this._radius;\r\n        bounds.minX = pos.x - radius;\r\n        bounds.minY = pos.y - radius;\r\n        bounds.maxX = pos.x + radius;\r\n        bounds.maxY = pos.y + radius;\r\n    }\r\n}","export * from \"./vector\";\r\nexport * from \"./bounds\";\r\nexport * from \"./object\";\r\nexport * from \"./circle\";\r\nexport * from \"./rectangle\";\r\nexport * from \"./world\";\r\nexport * from \"./my_circle\";\r\n","import { Circle } from \"./circle\";\r\nimport { Obj } from \"./object\";\r\nimport { Rectangle } from \"./rectangle\";\r\nimport { Vector } from \"./vector\";\r\n\r\nexport interface ICollideResult {\r\n    collided: boolean; normal:Vector;\r\n}\r\n\r\nexport class MyCircle extends Circle {\r\n\r\n    private _velocity:Vector;\r\n\r\n    constructor() {\r\n        super();\r\n        this._velocity = new Vector();\r\n\r\n    }\r\n\r\n    get velocity():Vector {\r\n        return this._velocity;\r\n    }\r\n\r\n    set velocity(value:Vector) {\r\n        this._velocity = value;\r\n    }\r\n\r\n    collide(target:Obj, result?:ICollideResult) {\r\n        if (result == null) result = {\r\n                collided: false,\r\n                normal: new Vector(),\r\n            };\r\n        else {\r\n            result.collided = false;\r\n        }\r\n        if (target instanceof Circle) {\r\n            let myCircle = this;\r\n            let targetCircle = target as Circle;\r\n            if (myCircle.bounds.intersect(targetCircle.bounds)) {\r\n                let normal = Vector.subVectors(myCircle.pos, targetCircle.pos);\r\n                let distance = normal.magnitude();\r\n                if (distance < (myCircle.radius + targetCircle.radius)) {\r\n                    result.collided = true;\r\n                    normal.normal();\r\n                    result.normal.copy(normal);\r\n                }\r\n            }\r\n        } else if (target instanceof Rectangle) {\r\n            let myCircle = this;\r\n            let targetSquare = target as Rectangle;\r\n            if (myCircle.bounds.intersect(targetSquare.bounds)) {\r\n                let circleCenter = myCircle.pos;\r\n                let circleCenterX = circleCenter.x;\r\n                let circleCenterY = circleCenter.y;\r\n                let circleRadius = myCircle.radius;\r\n                let squareBounds = targetSquare.bounds;\r\n                if (circleCenterX > squareBounds.minX && circleCenterX < squareBounds.maxX) {\r\n                    if (circleCenterY > squareBounds.minY && circleCenterY < squareBounds.maxY) {\r\n                        //The center is inside the bounds (namely, inside the square).\r\n                        result.collided = true;\r\n                        Vector.normalVector(myCircle.velocity, result.normal);\r\n                    } else if (circleCenterY > squareBounds.maxY) {\r\n                        //The center is downside the bounds.\r\n                        if (circleCenterY - squareBounds.maxY < circleRadius) {\r\n                            result.collided = true;\r\n                            result.normal = new Vector(0, 1);\r\n                        }\r\n\r\n                    } else if (circleCenterY < squareBounds.minY) {\r\n                        //The center is upside the bounds.\r\n                        if (squareBounds.minY - circleCenterY < circleRadius) {\r\n                            result.collided = true;\r\n                            result.normal = new Vector(0, -1);\r\n                        }\r\n                    }\r\n                } else if (circleCenterY > squareBounds.minY && circleCenterY < squareBounds.maxY) {\r\n                    if (circleCenterX > squareBounds.maxX) {\r\n                        //The center is right of the bounds.\r\n                        if (circleCenterX - squareBounds.maxX < circleRadius) {\r\n                            result.collided = true;\r\n                            result.normal = new Vector(1, 0);\r\n                        }\r\n                    } else if (circleCenterX < squareBounds.minX) {\r\n                        //The center is left of the bounds.\r\n                        if (squareBounds.minX - circleCenterX < circleRadius) {\r\n                            result.collided = true;\r\n                            result.normal = new Vector(-1, 0);\r\n                        }\r\n                    }\r\n                } else {\r\n                    //Detect if any point of square is inside the circle.\r\n                    let points = targetSquare.points;\r\n                    let pointCount = points.length;\r\n                    let pointHelper:Vector = new Vector();\r\n                    let circleRadiusSquare:number = circleRadius * circleRadius;\r\n                    for (let i = 0; i < pointCount; ++i) {\r\n                        Vector.subVectors(circleCenter, points[i], pointHelper);\r\n                        if (pointHelper.manitudeSquare() < circleRadiusSquare) {\r\n                            //The point is inside the circle.\r\n                            result.collided = true;\r\n                            Vector.normalVector(pointHelper, result.normal);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            throw new Error(\"Invalid shape for collision detection.\");\r\n        }\r\n\r\n        return result;\r\n    }\r\n}","import { Vector } from \"./vector\";\r\nimport { Bounds } from \"./bounds\";\r\n\r\nexport abstract class Obj {\r\n    protected _pos:Vector;\r\n    protected _bounds:Bounds;\r\n    constructor() {\r\n        this._pos = new Vector();\r\n        this._bounds = new Bounds();\r\n    }\r\n\r\n    get pos():Vector {\r\n        return this._pos;\r\n    }\r\n\r\n    set pos(value:Vector) {\r\n        this._pos.copy(value);\r\n    }\r\n\r\n    get bounds():Bounds {\r\n        return this._bounds;\r\n    }\r\n\r\n    updatePos(value?:Vector) {\r\n        if (value) {\r\n            this._pos = value;\r\n        }\r\n    }\r\n}","import { Obj } from \"./object\";\r\nimport { Vector } from \"./vector\";\r\n\r\nexport class Rectangle extends Obj {\r\n    private _width:number;\r\n    private _height:number;\r\n    static POINT_COUNT:number = 4;\r\n    private _points:Vector[];\r\n    constructor() {\r\n        super();\r\n        this._width = 0;\r\n        this._height = 0;\r\n        let points:Vector[] = [];\r\n        this._points = points;\r\n        const POINT_COUNT = Rectangle.POINT_COUNT;\r\n        points.length = POINT_COUNT;\r\n        for (let i = 0; i < POINT_COUNT; ++i) {\r\n            points[i] = new Vector();\r\n        }\r\n        this._setBounds();\r\n        this._setPoints();\r\n    }\r\n\r\n    get width() {\r\n        return this._width;\r\n    }\r\n\r\n    set width(value:number) {\r\n        this._width = value;\r\n        this._setBounds();\r\n        this._setPoints();\r\n    }\r\n\r\n    get height() {\r\n        return this._height;\r\n    }\r\n\r\n    set height(value:number) {\r\n        this._height = value;\r\n        this._setBounds();\r\n        this._setPoints();\r\n    }\r\n\r\n    get pos() {\r\n        return this._pos;\r\n    }\r\n\r\n    set pos(value:Vector) {\r\n        var pos = this._pos;\r\n        pos.copy(value);\r\n        \r\n        this._setBounds();\r\n        this._setPoints();\r\n        \r\n    }\r\n\r\n    updatePos(value?:Vector) {\r\n        super.updatePos(value);\r\n        this._setBounds();\r\n        this._setPoints();\r\n    }\r\n\r\n    get points() {\r\n        return this._points;\r\n    }\r\n\r\n    _setBounds() {\r\n        let pos = this._pos;\r\n        let bounds = this._bounds;\r\n        let halfWidth = this._width / 2;\r\n        let halfHeight = this._height / 2;\r\n        bounds.minX = pos.x - halfWidth;\r\n        bounds.minY = pos.y - halfHeight;\r\n        bounds.maxX = pos.x + halfWidth;\r\n        bounds.maxY = pos.y + halfHeight;\r\n    }\r\n\r\n    _setPoints() {\r\n        let bounds = this._bounds;\r\n        let points = this._points;\r\n        points[0].x = bounds.minX;\r\n        points[0].y = bounds.minY;\r\n        points[1].x = bounds.maxX;\r\n        points[1].y = bounds.minY;\r\n        points[2].x = bounds.maxX;\r\n        points[2].y = bounds.maxY;\r\n        points[3].x = bounds.minX;\r\n        points[3].y = bounds.maxY;\r\n    }\r\n}","export class Vector {\r\n    public static subVectors(vec1:Vector, vec2:Vector, result?:Vector):Vector {\r\n        if (! result) result = new Vector();\r\n        result.x = vec1.x - vec2.x;\r\n        result.y = vec1.y - vec2.y;\r\n        return result;\r\n    }\r\n\r\n    public static addVectors(vec1:Vector, vec2:Vector, result?:Vector):Vector {\r\n        if (! result) result = new Vector();\r\n        result.x = vec1.x + vec2.x;\r\n        result.y = vec1.y + vec2.y;\r\n        return result;\r\n    }\r\n\r\n    public static mulVectorMag(vec:Vector, magnitude:number, result?:Vector):Vector {\r\n        if (! result) result = new Vector();\r\n        result.x = vec.x * magnitude;\r\n        result.y = vec.y * magnitude;\r\n        return result;\r\n    }\r\n\r\n    public static normalVector(vec:Vector, result?:Vector):Vector {\r\n        if (! result) result = vec.clone();\r\n        else result.copy(vec);\r\n        result.normal();\r\n        return result;\r\n    }\r\n\r\n    public static dotVectors(vec1:Vector, vec2:Vector):number {\r\n        return vec1.x * vec2.x + vec1.y * vec2.y;\r\n    }\r\n\r\n    public static reflectVector(vec:Vector, normal:Vector, result?:Vector):Vector {\r\n        if (! result) result = new Vector();\r\n        else if (result == vec) {\r\n            throw new Error(\"The result shouldn't be argument vec.\");\r\n        }\r\n        let dot = Vector.dotVectors(vec, normal);\r\n        result.copy(normal);\r\n        result.mulMag(dot * 2);\r\n        Vector.subVectors(vec, result, result);\r\n        return result;\r\n    }\r\n\r\n    x:number;\r\n    y:number;\r\n    constructor(x:number = 0, y:number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    clone():Vector {\r\n        return new Vector(this.x, this.y);\r\n    }\r\n\r\n    copy(target:Vector):void {\r\n        this.x = target.x;\r\n        this.y = target.y;\r\n    }\r\n\r\n    sub(target:Vector):void {\r\n        this.x -= target.x;\r\n        this.y -= target.y;\r\n    }\r\n\r\n    add(target:Vector):void {\r\n        this.x += target.x;\r\n        this.y += target.y;\r\n    }\r\n\r\n    mulMag(magnitude:number):void {\r\n        this.x *= magnitude;\r\n        this.y *= magnitude;\r\n    }\r\n\r\n    magnitude():number {\r\n        var x = this.x;\r\n        var y = this.y;\r\n        return Math.sqrt(x * x + y * y);\r\n    }\r\n\r\n    manitudeSquare():number {\r\n        var x = this.x;\r\n        var y = this.y;\r\n        return x * x + y * y;\r\n    }\r\n\r\n    normal():void {\r\n        let magnitude = this.magnitude();\r\n        this.x /= magnitude;\r\n        this.y /= magnitude;\r\n    }\r\n\r\n    zero():void {\r\n        this.x = 0;\r\n        this.y = 0;\r\n    }\r\n}","import { Obj } from \"./object\";\r\nimport { Vector } from \"./vector\";\r\nimport { MyCircle, ICollideResult } from \"./my_circle\";\r\n\r\nexport class World {\r\n\r\n    time:number;\r\n    objectCount:number;\r\n    objects: Obj[];\r\n    myObj:MyCircle;\r\n\r\n    constructor() {\r\n        this.time = 0;\r\n        this.objectCount = 0;\r\n        this.objects = [];\r\n        this.myObj = new MyCircle();\r\n    }\r\n\r\n    addObj(object:Obj) {\r\n        if (this.objectCount < this.objects.length) {\r\n            this.objects[this.objectCount++] = object;\r\n        }\r\n        else {\r\n            this.objects.length = 2 * this.objects.length;\r\n            this.objects[this.objectCount++] = object;\r\n        }\r\n    }\r\n\r\n    removeObj(object:Obj) {\r\n        let objectCount = this.objectCount;\r\n        let objects = this.objects;\r\n        for (let i = 0; i < objectCount; ++i) {\r\n            if (object == objects[i]) {\r\n                --objectCount;\r\n                if (i < objectCount) {\r\n                    objects[i] = objects[objectCount];\r\n                    objects[objectCount] = null;\r\n                }\r\n\r\n                this.objectCount = objectCount;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.objectCount = 0;\r\n    }\r\n\r\n    get myObject() {\r\n        return this.myObj;\r\n    }\r\n\r\n    step(dt: number, iterations: number):void {\r\n\r\n        dt = dt || 0;\r\n        iterations = iterations || 1;\r\n\r\n        let cachePosHelper:Vector = new Vector();\r\n        let nextPosHelper:Vector = new Vector();\r\n        let collisionResultHelper:ICollideResult = { collided:false, normal: new Vector()};\r\n        let collisionNormlHelper:Vector = new Vector();\r\n        let reflectResultHelper:Vector = new Vector();\r\n\r\n        let minDt:number = dt / iterations;\r\n        for (let iteration = 0; iteration < iterations; ++iteration) {\r\n            let objectCount = this.objectCount;\r\n            let objects = this.objects;\r\n            let myBody = this.myObj;\r\n\r\n            //Cache current position.\r\n            let cachePos = cachePosHelper;\r\n            cachePos.copy(myBody.pos);\r\n\r\n            //Caculate next position.\r\n            let nextPos = nextPosHelper;\r\n            nextPos.x = myBody.pos.x + myBody.velocity.x * minDt;\r\n            nextPos.y = myBody.pos.y + myBody.velocity.y * minDt;\r\n            myBody.pos = nextPos;\r\n\r\n            //Detect collision.\r\n            let collisioned = false;\r\n            let collisionResult = collisionResultHelper;\r\n            let collsionNormal = collisionNormlHelper;\r\n            collsionNormal.zero();\r\n            for (let i = 0; i < objectCount; ++i) {\r\n                let object = objects[i];\r\n                myBody.collide(object, collisionResult);\r\n                if (collisionResult.collided) {\r\n                    collisioned = true;\r\n                    collsionNormal.add(collisionResult.normal);\r\n                }\r\n            }\r\n\r\n            //Final collsion result.\r\n            let reflectResult = reflectResultHelper;\r\n            if (collisioned) {\r\n                //Recover to cached pre postion.\r\n                myBody.pos = cachePos;\r\n                //Set new velocity according to collision normal.\r\n                Vector.reflectVector(myBody.velocity, collsionNormal, reflectResult);\r\n                myBody.velocity.copy(reflectResult);\r\n\r\n                //Move\r\n                let nextPos = nextPosHelper;\r\n                nextPos.x = myBody.pos.x + myBody.velocity.x * minDt;\r\n                nextPos.y = myBody.pos.y + myBody.velocity.y * minDt;\r\n                myBody.pos = nextPos;\r\n            }\r\n        }\r\n\r\n        this.time += dt;\r\n    }\r\n}"],"sourceRoot":""}